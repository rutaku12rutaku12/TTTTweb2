# .properties 파일의 주석하는 방법

# [1] 스프링 서버 port 설정
server.port=8080

# [2] JDBC 연동 설정 , DAO 에서 했던 연동 코드 대신에
# 1. 연동할 db서버 의 주소
spring.datasource.url=jdbc:mysql://localhost:3306/springweb2
# 2. 연동할 db서버 의 계정명
spring.datasource.username=root
# 3. 연동할 db서버 의 패스워드  , 주의할점 앞뒤 띄어쓰기 주의
spring.datasource.password=1234

# [3] 로깅
# 스프링의 기본값 레벨은 info 이다. 개발단계에서는 debug
logging.level.root = debug

# 1. 로그 레벨 설정
# 레벨 : debug < info < warn < error
# info 설정하면 info/warn/error
# warn 설정하면 warn/error
logging.level.example.day10=debug

# 2. 로그 파일 처리 설정 , 프로젝트 이하 경로 , 깃 허브에 gitignore 추가 // 방법:오른쪽 클릭후 git-gitignore 추가
# logging.file.name=패키지명/파일명.log
# logging.file.name=logs/app.log

# 3. 로그 파일 설정/옵션
logging.logback.rollingpolicy.max-file.size=1MB
# 3-2 : 최대 파일 개수 , 즉 최대 파일 개수 이후부터는 가장 오래된 파일이 대체된다.
logging.logback.rollingpolicy.max-history=10

# 4. 프레임워크 내부 로그 줄이기 ( 운영단계 에서 warn 이상만 출력 )
#spring.main.log-startup-info=false
#logging.level.org.springframework.boot.web=warn
#logging.level.org.springframework.boot.web.embedded.tomcat=warn
#logging.level.org.apache.catalina=warn
#logging.level.org.apache.coyote=warn
#logging.level.org.springframework.web=warn

# 5. 로그 형식 설정
# %msg : 로그메시지 , %n : 줄바꿈 , %d{ y M d H m s }  : 날짜/시간
# %level : 레벨 , logger : 클래스/경로
#logging.pattern.file= %d{ yyyy-MM-dd HH:mm:ss } %msg %n
#logging.pattern.console= %d{ yyyy-MM-dd HH:mm:ss } %level %logger %msg %n