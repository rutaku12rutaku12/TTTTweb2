
[ ALTER ]
    - 기존 테이블의 구조 변경
    - 사용법
        추가 : ALTER TABLE 테이블명 ADD COLUMN 새로운필드명 타입;
        타입수정 : ALTER TABLE 테이블명 MODIFY COLUMN 수정할필드명 새로운타입;
        필드명수정 : ALTER TABLE 테이블명 CHANGE COLUMN 기존필드명 새로운필드명 타입;
        삭제 : ALTER TABLE 테이블명 DROP COLUMN 삭제할필드명;
        제약조건추가
            ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건명 PRIMARY KEY(PK 필드명);
            ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건명 FOREIGN KEY(FK 필드명); REFERENCES 참조테이블명(PK 필드명),
            ALTER TABLE 테이블명 ADD CONSTRAINT 제약조건명 제약조건(필드명);
        제약조건삭제
            ALTER TABLE 테이블명 DROP PRIMARY KEY
            ALTER TABLE 테이블명 DROP FOREIGN KEY 삭제할제약조건명;
            ALTER TABLE 테이블명 DROP CONSTRAINT 삭제할제약조건명;
        필드 확인 : SHOW COLUMNS FROM 테이블명
        제약조건 확인 : SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS;

[ SUBQUERY ]
    - SELECT 안의 SELECT
    - 사용법 : SELECT (SELECT) FROM (SELECT) WHERE (SELECT)

[ Transaction ]
    - 여러 SQL 작업들은 하나의 단위(묶음)로 처리하여 모두 성공 이면 COMMIT , 하나라도 실패시 ROLLBACK 하는 기능
    - 멸령어
        1) set autocommit = 0;  : 자동 커밋 해제( 워크벤치에서 commit 수동모드 , =1 자동모드 )
        2) start transaction;   : 트랜잭션 시작
        3) commit;              : 성공
        4) rollback;            : 취소
        5) savepoint 포인트명;    : 임의의 포인트명으로 지정(위치) 저장
        6) rollback to 포인트명;  : 특정한 포인트명으로 이동
        * 자바 Spring : @Transactional 하고 RuntimeException 으로 롤백한다.

[ View ]
    - 정의 : 실제 데이터를 지정하지 않고, select 쿼리 결과를 이름으로 저장하는 가상의 테이블
    - 목적 : SQL 문의 (복잡성) 재사용 과 보안 , 일부 뷰 에서는 수정 불가능
    - 명령어
        1) create [ or replace ] view 뷰명 as 쿼리문;       : 뷰 생성
        2) alter view 뷰명 as 새로운쿼리문;                  : 뷰 수정
        3) drop view if exists 뷰명;                      : 뷰 삭제
        4) show full tables where TABLE_TYPE = 'view';   : 뷰 목록 확인
    - * 권한 분리 와 쿼리의 재사용으로 활용된다. *



















